#Student RESTful Web Service

##URIs
GET 	/students 		<--get all list of students: internally HTTP status CODE:200 OK -->if not found then 404
GET 	/students/{id} 	<--get single student by id: internally HTTP status CODE:200 OK 
							-->if not found then HttpStatus.NotFound 404 and throw StudentNotFoundException
POST 	/students		<--create single student-->Return 	HttpStatus.CREATED 201 and URI where resource created
PUT		/students		<--update single student by id
DELETE	/students/{id}	<--delete single student by id

GET 	/students/{id}/subjects		<--get all subject by student id 


## development activity contents
-----------------16May2020-----------------
Exception Handling
Validations
Student resources created 
------------------17May2020-----------------------------
Adding H2 db, Create JPA Repository
Static and Dynamic filtering
------------------nextday-----------------------------
i18n
Content Negotiation for support of XML
HATEOAS
Swagger
Spring Boot Actuator
WEbService Version-ing

We can Say tool of Cloud 
=========================================================================================================
Feign <-- is Rest web service client
Steps to use 
Step 1. Add dependency 			
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
			
Step 2. @EnableFeignClients("com.in28minutes.currencyconversionservice")

Ex. 
			package com.in28minutes.currencyconversionservice;

			import org.springframework.boot.SpringApplication;
			import org.springframework.boot.autoconfigure.SpringBootApplication;
			import org.springframework.cloud.openfeign.EnableFeignClients;

			@SpringBootApplication
			@EnableFeignClients("com.in28minutes.currencyconversionservice")
			public class CurrencyConversionServiceApplication {
			}
			
Step 3. @FeignClient

		Create proxy of service client which you want and Use annotation
	
Ex. 	@FeignClient(name = "currency-exchange-service", url = "localhost:8001")
		public interface CurrencyExchangeServiceProxy {
			@GetMapping(value = "currency-exchange/from/{from}/to/{to}")
			public ExchangeValue retriveExchangeValue(@PathVariable("from") String from, @PathVariable("to") String to);
		}


		
